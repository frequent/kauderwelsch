
// POLYFILL: => https://developer.mozilla.org/en-US/docs/Web/API/Cache
// this polyfill provides Cache.add(), Cache.addAll(), and CacheStorage.match(),
// should not be needed for Chromium > 47 And Firefox > 39
// importScripts('./serviceworker-cache-polyfill.js');
// CONFLICTING CONTROLLERS/NO CONTROLLER
// if using same scope (for example ./) => https://github.com/w3c/ServiceWorker/issues/921
// hijack using claim() which triggers oncontrollerchange on other serviceworkers
// => https://developer.mozilla.org/en-US/docs/Web/API/Clients/claim
// can also be used to not have to refresh page
// => https://davidwalsh.name/offline-recipes-service-workers
// => https://serviceworke.rs/immediate-claim_service-worker_doc.html

// STUFF
// intro => https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers
// intro => http://www.html5rocks.com/en/tutorials/service-worker/introduction/
// selective cache => https://github.com/GoogleChrome/samples/blob/gh-pages/service-worker/selective-caching/service-worker.js
// handling POST with indexedDB => https://serviceworke.rs/request-deferrer.html
// prefetch during install => https://googlechrome.github.io/samples/service-worker/prefetch/
// serve range from cache => https://googlechrome.github.io/samples/service-worker/prefetch-video/

emscripten tutorial:
http://blog.scottlogic.com/2014/03/12/native-code-emscripten-webgl-simmer-gently.html

Links:
http://cs.stanford.edu/people/karpathy/convnetjs/
https://github.com/karpathy/convnetjs

HTK doc => http://www.ee.columbia.edu/ln/LabROSA/doc/HTKBook21/node95.html
browser machinelearning
http://cs.stanford.edu/people/karpathy/convnetjs/
https://github.com/karpathy/convnetjs neural networks
HMM Proto => voxforge => https://rawhttp://www.soliantconsulting.com/blog/2013/02/title-generator-using-markov-chains.githubusercontent.com/VoxForge/develop/master/tutorial/hmm0/proto
One sample => https://github.com/Sumolari/hmm, has some states and things
Tutorial: http://chrisnatale.info/markov-models-in-javascript-part-ii-more-responsive-ui-with-hidden-markov-models/
http://chrisnatale.info/markov-models-in-javascript-part-i-an-observable-markov-chain/

http://www.ee.columbia.edu/ln/LabROSA/doc/HTKBook21/node50.html

build model in JS
http://www.soliantconsulting.com/blog/2013/02/title-generator-using-markov-chains
build brain cell in JS
https://medium.com/javascript-scene/how-to-build-a-neuron-exploring-ai-in-javascript-pt-1-c2726f1f02b2#.6hwlldhob

http://coding-geek.com/how-shazam-works/
speech accuracy: http://nshmyrev.blogspot.fr/2009/08/how-to-improve-accuracy.html
https://w-labs.at/experiments/audioviz/
https://www.airtightinteractive.com/2013/10/making-audio-reactive-visuals/
https://www.airtightinteractive.com/demos/js/uberviz/audioanalysis/js/AudioHandler.js
http://www.repository.voxforge1.org/downloads/Main/Tags/Releases/ 
http://htk.eng.cam.ac.uk => required for voxforge
https://en.wikibooks.org/wiki/Introducing_Julia/Getting_started => install from there!

Tutorial for building accoutic model:
http://www.voxforge.org/home/dev/acousticmodels/linux
http://www.voxforge.org/home/dev/acousticmodels/linux/create/htkjulius/tutorial/data-prep/step-1

Audacity online alternative: https://twistedwave.com/online/
Online File Converters:
=> FLAC ~ WAV: http://audio.online-convert.com/ (used, can do PCM 16bit signed little Endian!)
http://www.filezigzag.com/wav-zip-en.aspx

// https://mdn.github.io/web-dictaphone/ => barebones recorder
// => https://mdn.github.io/web-dictaphone/scripts/app.js
// => https://github.com/mdn/web-dictaphone

//https://softinst56756.host.vifib.net/public/project/hyperconvergence/
// audio example => good, too, haha, uses worker and code from last example
// from Matt Diamond... ok. bien.

// https://subvisual.co/blog/posts/39-tutorial-html-audio-capture-streaming-to-node-js-no-browser-extensions
// another tutorial
// get mic access

// JIO soundcloud storage
https://developers.soundcloud.com/docs/api/sdks#uploading
e -> resample

http://seapip.com/canvas/visualizer4/                                  
http://stackoverflow.com/questions/27598270/resample-audio-buffer-from-44100-to-16000

// worker indexeddb textparsing
https://www.html5rocks.com/en/tutorials/file/dndfiles/
https://www.html5rocks.com/en/tutorials/file/filesystem-sync/
http://stackoverflow.com/questions/23331546/how-to-use-javascript-to-read-local-text-file-and-read-line-by-line
https://www.codeproject.com/Articles/744986/How-to-do-some-magic-with-indexedDB

https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API/Using_IndexedDB
https://github.com/mdn/to-do-notifications/blob/gh-pages/scripts/todo.js
http://www.codemag.com/article/1411041
http://stackoverflow.com/questions/12084177/in-indexeddb-is-there-a-way-to-make-a-sorted-compound-query
foo.split(/([A-Z ]*)\s*(\[[A-Z ]*\])\s*([a-z ]*)/)
foo = "HELLO    [HELLO]     eh low"
BUBBLY(2)       [BUBBLY(2)]     b ah b ah l iy
bar.split(/([A-Z0-9]*)\s*([A-Z0-9]*)\s*([a-z ]*)/)

// sound emitter
http://www.szynalski.com/tone-generator/

// array buffer
http://www.javascripture.com/ArrayBuffer
